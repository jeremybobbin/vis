/* Configure your desired default key bindings. */

#define ALIAS(name) .alias = name,

static const char *keymaps[] = {
	NULL
};

static const KeyBinding bindings_basic[] = {
	{ "<C-z>",              ALIAS("<vis-suspend>")                                         },
	{ "<Down>",             ALIAS("<vis-motion-line-down>")                                },
	{ "<End>",              ALIAS("<vis-motion-line-end>")                                 },
	{ "<Home>",             ALIAS("<vis-motion-line-begin>")                               },
	{ "<Left>",             ALIAS("<vis-motion-char-prev>")                                },
	{ "<PageDown>",         ALIAS("<vis-window-page-down>")                                },
	{ "<PageUp>",           ALIAS("<vis-window-page-up>")                                  },
	{ "<Right>",            ALIAS("<vis-motion-char-next>")                                },
	{ "<S-Left>",           ALIAS("<vis-motion-bigword-start-prev>")                       },
	{ "<S-PageDown>",       ALIAS("<vis-window-halfpage-down>")                            },
	{ "<S-PageUp>",         ALIAS("<vis-window-halfpage-up>")                              },
	{ "<S-Right>",          ALIAS("<vis-motion-bigword-start-next>")                       },
	{ "<Up>",               ALIAS("<vis-motion-line-up>")                                  },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_motions[] = {
	{ "g|",                 ALIAS("<vis-motion-column>")                                   },
	{ "[{",                 ALIAS("<vis-motion-block-start>")                              },
	{ "]}",                 ALIAS("<vis-motion-block-end>")                                },
	{ "[(",                 ALIAS("<vis-motion-parenthesis-start>")                        },
	{ "])",                 ALIAS("<vis-motion-parenthesis-end>")                          },
	{ "$",                  ALIAS("<vis-motion-line-end>")                                 },
	{ "^",                  ALIAS("<vis-motion-line-start>")                               },
	{ "}",                  ALIAS("<vis-motion-paragraph-next>")                           },
	{ "{",                  ALIAS("<vis-motion-paragraph-prev>")                           },
	{ "%",                  ALIAS("<vis-motion-percent>")                                  },
	{ "#",                  ALIAS("<vis-motion-search-word-backward>")                     },
	{ "*",                  ALIAS("<vis-motion-search-word-forward>")                      },
	{ ")",                  ALIAS("<vis-motion-sentence-next>")                            },
	{ "(",                  ALIAS("<vis-motion-sentence-prev>")                            },
	{ "?",                  ALIAS("<vis-search-backward>")                                 },
	{ "/",                  ALIAS("<vis-search-forward>")                                  },
	{ ";",                  ALIAS("<vis-motion-totill-repeat>")                            },
	{ ",",                  ALIAS("<vis-motion-totill-reverse>")                           },
	{ "+",                  ALIAS("j^")                                                    },
	{ "-",                  ALIAS("k^")                                                    },
	{ "B",                  ALIAS("<vis-motion-bigword-start-prev>")                       },
	{ "b",                  ALIAS("<vis-motion-word-start-prev>")                          },
	{ "E",                  ALIAS("<vis-motion-bigword-end-next>")                         },
	{ "e",                  ALIAS("<vis-motion-word-end-next>")                            },
	{ "F",                  ALIAS("<vis-motion-to-line-left>")                             },
	{ "f",                  ALIAS("<vis-motion-to-line-right>")                            },
	{ "go",                 ALIAS("<vis-motion-byte>")                                     },
	{ "gH",                 ALIAS("<vis-motion-byte-left>")                                },
	{ "gL",                 ALIAS("<vis-motion-byte-right>")                               },
	{ "gh",                 ALIAS("<vis-motion-codepoint-prev>")                           },
	{ "gl",                 ALIAS("<vis-motion-codepoint-next>")                           },
	{ "g0",                 ALIAS("<vis-motion-screenline-begin>")                         },
	{ "g_",                 ALIAS("<vis-motion-line-finish>")                              },
	{ "G",                  ALIAS("<vis-motion-line-last>")                                },
	{ "g$",                 ALIAS("<vis-motion-screenline-end>")                           },
	{ "gE",                 ALIAS("<vis-motion-bigword-end-prev>")                         },
	{ "ge",                 ALIAS("<vis-motion-word-end-prev>")                            },
	{ "gg",                 ALIAS("<vis-motion-line-first>")                               },
	{ "gj",                 ALIAS("<vis-motion-screenline-down>")                          },
	{ "gk",                 ALIAS("<vis-motion-screenline-up>")                            },
	{ "gm",                 ALIAS("<vis-motion-screenline-middle>")                        },
	{ "h",                  ALIAS("<vis-motion-char-prev>")                                },
	{ "H",                  ALIAS("<vis-motion-window-line-top>")                          },
	{ "j",                  ALIAS("<vis-motion-line-down>")                                },
	{ "k",                  ALIAS("<vis-motion-line-up>")                                  },
	{ "l",                  ALIAS("<vis-motion-char-next>")                                },
	{ "L",                  ALIAS("<vis-motion-window-line-bottom>")                       },
	{ "M",                  ALIAS("<vis-motion-window-line-middle>")                       },
	{ "n",                  ALIAS("<vis-motion-search-repeat-forward>")                    },
	{ "N",                  ALIAS("<vis-motion-search-repeat-backward>")                   },
	{ "T",                  ALIAS("<vis-motion-till-line-left>")                           },
	{ "t",                  ALIAS("<vis-motion-till-line-right>")                          },
	{ "W",                  ALIAS("<vis-motion-bigword-start-next>")                       },
	{ "w",                  ALIAS("<vis-motion-word-start-next>")                          },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_textobjects[] = {
	{ "a<",                 ALIAS("<vis-textobject-angle-bracket-outer>")                  },
	{ "a`",                 ALIAS("<vis-textobject-backtick-outer>")                       },
	{ "a{",                 ALIAS("<vis-textobject-curly-bracket-outer>")                  },
	{ "a(",                 ALIAS("<vis-textobject-parenthesis-outer>")                    },
	{ "a\"",                ALIAS("<vis-textobject-quote-outer>")                          },
	{ "a\'",                ALIAS("<vis-textobject-single-quote-outer>")                   },
	{ "a[",                 ALIAS("<vis-textobject-square-bracket-outer>")                 },
	{ "a>",                 ALIAS("a<")                                                    },
	{ "a)",                 ALIAS("a(")                                                    },
	{ "a]",                 ALIAS("a[")                                                    },
	{ "a}",                 ALIAS("a{")                                                    },
	{ "ab",                 ALIAS("a(")                                                    },
	{ "aB",                 ALIAS("a{")                                                    },
	{ "al",                 ALIAS("<vis-textobject-line-outer>")                           },
	{ "ap",                 ALIAS("<vis-textobject-paragraph-outer>")                      },
	{ "as",                 ALIAS("<vis-textobject-sentence>")                             },
	{ "a<Tab>",             ALIAS("<vis-textobject-indentation>")                          },
	{ "aW",                 ALIAS("<vis-textobject-bigword-outer>")                        },
	{ "aw",                 ALIAS("<vis-textobject-word-outer>")                           },
	{ "gN",                 ALIAS("<vis-textobject-search-backward>")                      },
	{ "gn",                 ALIAS("<vis-textobject-search-forward>")                       },
	{ "i<",                 ALIAS("<vis-textobject-angle-bracket-inner>")                  },
	{ "i`",                 ALIAS("<vis-textobject-backtick-inner>")                       },
	{ "i{",                 ALIAS("<vis-textobject-curly-bracket-inner>")                  },
	{ "i(",                 ALIAS("<vis-textobject-parenthesis-inner>")                    },
	{ "i\"",                ALIAS("<vis-textobject-quote-inner>")                          },
	{ "i\'",                ALIAS("<vis-textobject-single-quote-inner>")                   },
	{ "i[",                 ALIAS("<vis-textobject-square-bracket-inner>")                 },
	{ "i>",                 ALIAS("i<")                                                    },
	{ "i)",                 ALIAS("i(")                                                    },
	{ "i]",                 ALIAS("i[")                                                    },
	{ "i}",                 ALIAS("i{")                                                    },
	{ "ib",                 ALIAS("i(")                                                    },
	{ "iB",                 ALIAS("i{")                                                    },
	{ "il",                 ALIAS("<vis-textobject-line-inner>")                           },
	{ "ip",                 ALIAS("<vis-textobject-paragraph>")                            },
	{ "is",                 ALIAS("<vis-textobject-sentence>")                             },
	{ "i<Tab>",             ALIAS("<vis-textobject-indentation>")                          },
	{ "iW",                 ALIAS("<vis-textobject-bigword-inner>")                        },
	{ "iw",                 ALIAS("<vis-textobject-word-inner>")                           },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_selections[] = {
	{ "m",                  ALIAS("<vis-selections-save>")                                 },
	{ "M",                  ALIAS("<vis-selections-restore>")                              },
	{ "|",                  ALIAS("<vis-selections-union>")                                },
	{ "&",                  ALIAS("<vis-selections-intersect>")                            },
	{ "~",                  ALIAS("<vis-selections-complement>")                           },
	{ "\\",                 ALIAS("<vis-selections-minus>")                                },
	{ "_",                  ALIAS("<vis-selections-trim>")                                 },
	{ "<S-Tab>",            ALIAS("<vis-selections-align-indent-right>")                   },
	{ "<Tab>",              ALIAS("<vis-selections-align-indent-left>")                    },
	{ "g<",                 ALIAS("<vis-jumplist-prev>")                                   },
	{ "gs",                 ALIAS("<vis-jumplist-save>")                                   },
	{ "g>",                 ALIAS("<vis-jumplist-next>")                                   },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_operators[] = {
	{ "0",                  ALIAS("<vis-count-zero>")                                      },
	{ "1",                  ALIAS("<vis-count-one>")                                       },
	{ "2",                  ALIAS("<vis-count-two>")                                       },
	{ "3",                  ALIAS("<vis-count-three>")                                     },
	{ "4",                  ALIAS("<vis-count-four>")                                      },
	{ "5",                  ALIAS("<vis-count-five>")                                      },
	{ "6",                  ALIAS("<vis-count-six>")                                       },
	{ "7",                  ALIAS("<vis-count-seven>")                                     },
	{ "8",                  ALIAS("<vis-count-eight>")                                     },
	{ "9",                  ALIAS("<vis-count-nine>")                                      },
	{ "=",                  ALIAS(":|fmt<Enter>")                                          },
	{ "<",                  ALIAS("<vis-operator-shift-left>")                             },
	{ ">",                  ALIAS("<vis-operator-shift-right>")                            },
	{ "\"",                 ALIAS("<vis-register>")                                        },
	{ "'",                  ALIAS("<vis-mark>")                                            },
	{ "c",                  ALIAS("<vis-operator-change>")                                 },
	{ "d",                  ALIAS("<vis-operator-delete>")                                 },
	{ "g~",                 ALIAS(":|tr '[:lower:][:upper:]' '[:upper:][:lower:]'<Enter>") },
	{ "gu",                 ALIAS(":|awk '{printf \"%s\", tolower($0)}'<Enter>")           },
	{ "gU",                 ALIAS(":|awk '{printf \"%s\", toupper($0)}'<Enter>")           },
	{ "p",                  ALIAS("<vis-put-after>")                                       },
	{ "P",                  ALIAS("<vis-put-before>")                                      },
	{ "y",                  ALIAS("<vis-operator-yank>")                                   },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_normal[] = {
	{ "a",                  ALIAS("<vis-append-char-next>")                                },
	{ "A",                  ALIAS("<vis-append-line-end>")                                 },
	{ "@",                  ALIAS("<vis-macro-replay>")                                    },
	{ ":",                  ALIAS("<vis-prompt-show>")                                     },
	{ ".",                  ALIAS("<vis-repeat>")                                          },
	{ "C",                  ALIAS("c$")                                                    },
	{ "<C-b>",              ALIAS("<PageUp>")                                              },
	{ "<C-c>",              ALIAS("<vis-selections-remove-column>")                        },
	{ "<C-d>",              ALIAS("<vis-selection-next>")                                  },
	{ "<C-e>",              ALIAS("<vis-window-slide-up>")                                 },
	{ "<C-f>",              ALIAS("<PageDown>")                                            },
	{ "<C-j>",              ALIAS("<vis-selection-new-lines-below>")                       },
	{ "<C-k>",              ALIAS("<vis-selection-new-lines-above>")                       },
	{ "<C-l>",              ALIAS("<vis-selections-remove-column-except>")                 },
	{ "<C-n>",              ALIAS("viw")                                                   },
	{ "<C-p>",              ALIAS("<vis-selections-remove-last>")                          },
	{ "<C-r>",              ALIAS("<vis-redo>")                                            },
	{ "<C-u>",              ALIAS("<vis-selection-prev>")                                  },
	{ "<C-w>c",             ALIAS(":q<Enter>")                                             },
	{ "<C-w>h",             ALIAS("<C-w>k")                                                },
	{ "<C-w>j",             ALIAS("<vis-window-next>")                                     },
	{ "<C-w>k",             ALIAS("<vis-window-prev>")                                     },
	{ "<C-w>l",             ALIAS("<C-w>j")                                                },
	{ "<C-w>n",             ALIAS(":open<Enter>")                                          },
	{ "<C-w>s",             ALIAS(":split<Enter>")                                         },
	{ "<C-w>v",             ALIAS(":vsplit<Enter>")                                        },
	{ "<C-y>",              ALIAS("<vis-window-slide-down>")                               },
	{ "D",                  ALIAS("d$")                                                    },
	{ "<Escape>",           ALIAS("<vis-mode-normal-escape>")                              },
	{ "<F1>",               ALIAS(":help<Enter>")                                          },
	{ "ga",                 ALIAS("<vis-unicode-info>")                                    },
	{ "g8",                 ALIAS("<vis-utf8-info>")                                       },
	{ "g-",                 ALIAS("<vis-earlier>")                                         },
	{ "g+",                 ALIAS("<vis-later>")                                           },
	{ "gn",                 ALIAS("vgn")                                                   },
	{ "gN",                 ALIAS("vgN")                                                   },
	{ "gv",                 ALIAS("v'^M")                                                  },
	{ "I",                  ALIAS("<vis-insert-line-start>")                               },
	{ "i",                  ALIAS("<vis-mode-insert>")                                     },
	{ "J",                  ALIAS("<vis-join-lines>")                                      },
	{ "gJ",                 ALIAS("<vis-join-lines-trim>")                                 },
	{ "<M-C-j>",            ALIAS("<vis-selection-new-lines-below-last>")                  },
	{ "<M-C-k>",            ALIAS("<vis-selection-new-lines-above-first>")                 },
	{ "O",                  ALIAS("<vis-open-line-above>")                                 },
	{ "o",                  ALIAS("<vis-open-line-below>")                                 },
	{ "q",                  ALIAS("<vis-macro-record>")                                    },
	{ "R",                  ALIAS("<vis-mode-replace>")                                    },
	{ "r",                  ALIAS("<vis-replace-char>")                                    },
	{ "S",                  ALIAS("^c$")                                                   },
	{ "s",                  ALIAS("cl")                                                    },
	{ "<Tab>",              ALIAS("<vis-selections-align>")                                },
	{ "u",                  ALIAS("<vis-undo>")                                            },
	{ "v",                  ALIAS("<vis-mode-visual-charwise>")                            },
	{ "V",                  ALIAS("<vis-mode-visual-linewise>")                            },
	{ "x",                  ALIAS("<vis-delete-char-next>")                                },
	{ "X",                  ALIAS("dh")                                                    },
	{ "Y",                  ALIAS("y$")                                                    },
	{ "zb",                 ALIAS("<vis-window-redraw-bottom>")                            },
	{ "ZQ",                 ALIAS(":q!<Enter>")                                            },
	{ "zt",                 ALIAS("<vis-window-redraw-top>")                               },
	{ "zz",                 ALIAS("<vis-window-redraw-center>")                            },
	{ "ZZ",                 ALIAS(":wq<Enter>")                                            },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_visual[] = {
	{ "A",                  ALIAS("<vis-selection-new-lines-end>")                         },
	{ "@",                  ALIAS("<vis-macro-replay>")                                    },
	{ ":",                  ALIAS("<vis-prompt-show>")                                     },
	{ "-",                  ALIAS("<vis-selections-rotate-left>")                          },
	{ "+",                  ALIAS("<vis-selections-rotate-right>")                         },
	{ "<",                  ALIAS("<vis-operator-shift-left>gv")                           },
	{ ">",                  ALIAS("<vis-operator-shift-right>gv")                          },
	{ "<C-b>",              ALIAS("<PageUp>")                                              },
	{ "<C-c>",              ALIAS("<vis-selections-remove-column>")                        },
	{ "<C-d>",              ALIAS("<vis-selection-next>")                                  },
	{ "<C-f>",              ALIAS("<PageDown>")                                            },
	{ "<C-j>",              ALIAS("<C-d>")                                                 },
	{ "<C-k>",              ALIAS("<C-u>")                                                 },
	{ "<C-l>",              ALIAS("<vis-selections-remove-column-except>")                 },
	{ "<C-n>",              ALIAS("<vis-selection-new-match-next>")                        },
	{ "<C-p>",              ALIAS("<vis-selections-remove-last>")                          },
	{ "<C-u>",              ALIAS("<vis-selection-prev>")                                  },
	{ "<C-x>",              ALIAS("<vis-selection-new-match-skip>")                        },
	{ "<Escape>",           ALIAS("<vis-mode-visual-escape>")                              },
	{ "I",                  ALIAS("<vis-selection-new-lines-begin>")                       },
	{ "J",                  ALIAS("<vis-join-lines>")                                      },
	{ "gJ",                 ALIAS("<vis-join-lines-trim>")                                 },
	{ "o",                  ALIAS("<vis-selection-flip>")                                  },
	{ "q",                  ALIAS("<vis-macro-record>")                                    },
	{ "r",                  ALIAS("<vis-replace-char>")                                    },
	{ "s",                  ALIAS("c")                                                     },
	{ "u",                  ALIAS("gu<Escape>")                                            },
	{ "U",                  ALIAS("gU<Escape>")                                            },
	{ "V",                  ALIAS("<vis-mode-visual-linewise>")                            },
	{ "v",                  ALIAS("<Escape>")                                              },
	{ "x",                  ALIAS("d")                                                     },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_visual_line[] = {
	{ "v",                  ALIAS("<vis-mode-visual-charwise>")                            },
	{ "V",                  ALIAS("<vis-mode-normal>")                                     },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_readline[] = {
	{ "<Backspace>",        ALIAS("<vis-delete-char-prev>")                                },
	{ "<C-c>",              ALIAS("<Escape>")                                              },
	{ "<C-d>",              ALIAS("<vis-delete-char-next>")                                },
	{ "<C-h>",              ALIAS("<Backspace>")                                           },
	{ "<C-u>",              ALIAS("<vis-delete-line-begin>")                               },
	{ "<C-v>",              ALIAS("<vis-insert-verbatim>")                                 },
	{ "<C-w>",              ALIAS("<vis-delete-word-prev>")                                },
	{ "<C-e>",              ALIAS("<vis-motion-line-end>")                                 },
	{ "<C-a>",              ALIAS("<vis-motion-line-start>")                               },
	{ "<Delete>",           ALIAS("<vis-delete-char-next>")                                },
	{ "<Escape>",           ALIAS("<vis-mode-normal>")                                     },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_insert[] = {
	{ "<C-d>",              ALIAS("<vis-operator-shift-left><vis-operator-shift-left>")    },
	{ "<C-i>",              ALIAS("<Tab>")                                                 },
	{ "<C-j>",              ALIAS("<vis-insert-verbatim>u000a")                            },
	{ "<C-m>",              ALIAS("<Enter>")                                               },
	{ "<C-r>",              ALIAS("<vis-insert-register>")                                 },
	{ "<C-t>",              ALIAS("<vis-operator-shift-right><vis-operator-shift-right>")  },
	{ "<C-x><C-e>",         ALIAS("<vis-window-slide-up>")                                 },
	{ "<C-x><C-y>",         ALIAS("<vis-window-slide-down>")                               },
	{ "<Enter>",            ALIAS("<vis-insert-newline>")                                  },
	{ "<Escape>",           ALIAS("<vis-mode-normal>")                                     },
	{ "<S-Tab>",            ALIAS("<vis-selections-align-indent-left>")                    },
	{ "<Tab>",              ALIAS("<vis-insert-tab>")                                      },
	{ 0                     /* empty last element, array terminator */                     },
};

static const KeyBinding bindings_replace[] = {
	{ 0                     /* empty last element, array terminator */                     },
};

/* For each mode we list a all key bindings, if a key is bound in more than
 * one array the first definition is used and further ones are ignored. */
static const KeyBinding **default_bindings[] = {
	[VIS_MODE_OPERATOR_PENDING] = (const KeyBinding*[]){
		bindings_operators,
		bindings_textobjects,
		bindings_motions,
		bindings_basic,
		NULL,
	},
	[VIS_MODE_NORMAL] = (const KeyBinding*[]){
		bindings_normal,
		bindings_selections,
		bindings_operators,
		bindings_motions,
		bindings_basic,
		NULL,
	},
	[VIS_MODE_VISUAL] = (const KeyBinding*[]){
		bindings_visual,
		bindings_selections,
		bindings_textobjects,
		bindings_operators,
		bindings_motions,
		bindings_basic,
		NULL,
	},
	[VIS_MODE_VISUAL_LINE] = (const KeyBinding*[]){
		bindings_visual_line,
		NULL,
	},
	[VIS_MODE_INSERT] = (const KeyBinding*[]){
		bindings_insert,
		bindings_readline,
		bindings_basic,
		NULL,
	},
	[VIS_MODE_REPLACE] = (const KeyBinding*[]){
		bindings_replace,
		NULL,
	},
};
